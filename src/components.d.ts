/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppRoot {
    }
    interface BackgroundMusic {
    }
    interface CountdownTimer {
    }
    interface EnvelopeIntro {
        /**
          * Contraseña requerida (personalizable como atributo: <envelope-intro password="XXXX" /> )
          * @default 'Steph-2025'
         */
        "password": string;
    }
    interface FloralIntro {
        /**
          * @default 'Stephanie'
         */
        "bride": string;
        /**
          * @default 'Nuestra Boda'
         */
        "eventLabel": string;
        "familySurname"?: string;
        /**
          * @default 'Brandon'
         */
        "groom": string;
        /**
          * @default 'Luis Jair'
         */
        "guestName"?: string;
        /**
          * @default 'Desliza hacia abajo para descubrir la invitación'
         */
        "hintText": string;
    }
    interface GuestMessages {
        /**
          * @default ''
         */
        "photoAlt": string;
        /**
          * @default 'assets/img/slide_novios13.jpg'
         */
        "photoSrc": string;
    }
    interface PhotoCarousel {
    }
    interface SectionCouple {
        /**
          * @default 'Stephanie Santana Zambrano'
         */
        "bride": string;
        /**
          * @default ['Norma Angeliza Zambrano Mendoza', 'José Santana Arenas']
         */
        "brideParents": string[];
        /**
          * @default 'Brandon Jesús Garcia Garcia'
         */
        "groom": string;
        /**
          * @default ['Viviana Garcia Rito', 'Mauricio Garcia Aguilar']
         */
        "groomParents": string[];
        /**
          * @default 'Mejores son dos que uno, pues juntos superan cualquier desafío, se levantan cuando caen y se fortalecen con su amor.'
         */
        "verse": string;
        /**
          * @default 'Eclesiastés 4:9-10'
         */
        "verseRef": string;
    }
    interface SectionDetails {
        /**
          * @default 'Detalle'
         */
        "photoAlt": string;
        /**
          * Foto inferior
          * @default 'assets/img/slide_novios1.jpg'
         */
        "photoSrc": string;
    }
    interface SectionGifts {
        /**
          * @default 'Mesa de regalos'
         */
        "mesaLabel": string;
        /**
          * @default 'https://www.amazon.com.mx/wedding/share/NuestraBodaStephanieBrandon'
         */
        "mesaUrl": string;
        /**
          * @default 'El mejor regalo es que estés presente en este día tan esperado, pero si deseas hacernos un obsequio tenemos esta opción:'
         */
        "message": string;
        "note"?: string;
        /**
          * @default 'Regalos'
         */
        "title": string;
    }
    interface SectionLocation {
        /**
          * @default 'And. Vista Hermosa Manzana 019,'
         */
        "churchAddress1": string;
        /**
          * @default 'NFONAVIT San Francisco, 52176 San Salvador Tizatlalli, Méx.'
         */
        "churchAddress2": string;
        /**
          * @default 19.265728081855073
         */
        "churchLat": number;
        /**
          * @default -99.5949773087833
         */
        "churchLng": number;
        /**
          * @default 'Parroquia de San Francisco De Asís'
         */
        "churchPlace": string;
        /**
          * @default '5:00 p.m.'
         */
        "churchTime": string;
        /**
          * Iglesia
          * @default 'Ceremonia Religiosa'
         */
        "churchTitle": string;
        /**
          * @default 'Av. Durazno 85'
         */
        "hallAddress1": string;
        /**
          * @default ' Izcalli V, 52172 San Salvador Tizatlalli, Méx.'
         */
        "hallAddress2": string;
        /**
          * @default 19.269931527268504
         */
        "hallLat": number;
        /**
          * @default -99.59031501349244
         */
        "hallLng": number;
        /**
          * @default 'Salón Rossano'
         */
        "hallPlace": string;
        /**
          * @default '7:00 p.m.'
         */
        "hallTime": string;
        /**
          * Recepción / Salón
          * @default 'Recepción'
         */
        "hallTitle": string;
    }
    interface SectionRsvp {
    }
    interface SectionTimeline {
    }
    interface SectionWelcome {
    }
}
export interface GuestMessagesCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLGuestMessagesElement;
}
export interface SectionRsvpCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSectionRsvpElement;
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLBackgroundMusicElement extends Components.BackgroundMusic, HTMLStencilElement {
    }
    var HTMLBackgroundMusicElement: {
        prototype: HTMLBackgroundMusicElement;
        new (): HTMLBackgroundMusicElement;
    };
    interface HTMLCountdownTimerElement extends Components.CountdownTimer, HTMLStencilElement {
    }
    var HTMLCountdownTimerElement: {
        prototype: HTMLCountdownTimerElement;
        new (): HTMLCountdownTimerElement;
    };
    interface HTMLEnvelopeIntroElement extends Components.EnvelopeIntro, HTMLStencilElement {
    }
    var HTMLEnvelopeIntroElement: {
        prototype: HTMLEnvelopeIntroElement;
        new (): HTMLEnvelopeIntroElement;
    };
    interface HTMLFloralIntroElement extends Components.FloralIntro, HTMLStencilElement {
    }
    var HTMLFloralIntroElement: {
        prototype: HTMLFloralIntroElement;
        new (): HTMLFloralIntroElement;
    };
    interface HTMLGuestMessagesElementEventMap {
        "guest-message-submit": { message: string };
    }
    interface HTMLGuestMessagesElement extends Components.GuestMessages, HTMLStencilElement {
        addEventListener<K extends keyof HTMLGuestMessagesElementEventMap>(type: K, listener: (this: HTMLGuestMessagesElement, ev: GuestMessagesCustomEvent<HTMLGuestMessagesElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLGuestMessagesElementEventMap>(type: K, listener: (this: HTMLGuestMessagesElement, ev: GuestMessagesCustomEvent<HTMLGuestMessagesElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLGuestMessagesElement: {
        prototype: HTMLGuestMessagesElement;
        new (): HTMLGuestMessagesElement;
    };
    interface HTMLPhotoCarouselElement extends Components.PhotoCarousel, HTMLStencilElement {
    }
    var HTMLPhotoCarouselElement: {
        prototype: HTMLPhotoCarouselElement;
        new (): HTMLPhotoCarouselElement;
    };
    interface HTMLSectionCoupleElement extends Components.SectionCouple, HTMLStencilElement {
    }
    var HTMLSectionCoupleElement: {
        prototype: HTMLSectionCoupleElement;
        new (): HTMLSectionCoupleElement;
    };
    interface HTMLSectionDetailsElement extends Components.SectionDetails, HTMLStencilElement {
    }
    var HTMLSectionDetailsElement: {
        prototype: HTMLSectionDetailsElement;
        new (): HTMLSectionDetailsElement;
    };
    interface HTMLSectionGiftsElement extends Components.SectionGifts, HTMLStencilElement {
    }
    var HTMLSectionGiftsElement: {
        prototype: HTMLSectionGiftsElement;
        new (): HTMLSectionGiftsElement;
    };
    interface HTMLSectionLocationElement extends Components.SectionLocation, HTMLStencilElement {
    }
    var HTMLSectionLocationElement: {
        prototype: HTMLSectionLocationElement;
        new (): HTMLSectionLocationElement;
    };
    interface HTMLSectionRsvpElementEventMap {
        "confirmAttendance": void;
        "cancelAttendance": void;
        "pendingAttendance": void;
    }
    interface HTMLSectionRsvpElement extends Components.SectionRsvp, HTMLStencilElement {
        addEventListener<K extends keyof HTMLSectionRsvpElementEventMap>(type: K, listener: (this: HTMLSectionRsvpElement, ev: SectionRsvpCustomEvent<HTMLSectionRsvpElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLSectionRsvpElementEventMap>(type: K, listener: (this: HTMLSectionRsvpElement, ev: SectionRsvpCustomEvent<HTMLSectionRsvpElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLSectionRsvpElement: {
        prototype: HTMLSectionRsvpElement;
        new (): HTMLSectionRsvpElement;
    };
    interface HTMLSectionTimelineElement extends Components.SectionTimeline, HTMLStencilElement {
    }
    var HTMLSectionTimelineElement: {
        prototype: HTMLSectionTimelineElement;
        new (): HTMLSectionTimelineElement;
    };
    interface HTMLSectionWelcomeElement extends Components.SectionWelcome, HTMLStencilElement {
    }
    var HTMLSectionWelcomeElement: {
        prototype: HTMLSectionWelcomeElement;
        new (): HTMLSectionWelcomeElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "background-music": HTMLBackgroundMusicElement;
        "countdown-timer": HTMLCountdownTimerElement;
        "envelope-intro": HTMLEnvelopeIntroElement;
        "floral-intro": HTMLFloralIntroElement;
        "guest-messages": HTMLGuestMessagesElement;
        "photo-carousel": HTMLPhotoCarouselElement;
        "section-couple": HTMLSectionCoupleElement;
        "section-details": HTMLSectionDetailsElement;
        "section-gifts": HTMLSectionGiftsElement;
        "section-location": HTMLSectionLocationElement;
        "section-rsvp": HTMLSectionRsvpElement;
        "section-timeline": HTMLSectionTimelineElement;
        "section-welcome": HTMLSectionWelcomeElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface BackgroundMusic {
    }
    interface CountdownTimer {
    }
    interface EnvelopeIntro {
        /**
          * Contraseña requerida (personalizable como atributo: <envelope-intro password="XXXX" /> )
          * @default 'Steph-2025'
         */
        "password"?: string;
    }
    interface FloralIntro {
        /**
          * @default 'Stephanie'
         */
        "bride"?: string;
        /**
          * @default 'Nuestra Boda'
         */
        "eventLabel"?: string;
        "familySurname"?: string;
        /**
          * @default 'Brandon'
         */
        "groom"?: string;
        /**
          * @default 'Luis Jair'
         */
        "guestName"?: string;
        /**
          * @default 'Desliza hacia abajo para descubrir la invitación'
         */
        "hintText"?: string;
    }
    interface GuestMessages {
        "onGuest-message-submit"?: (event: GuestMessagesCustomEvent<{ message: string }>) => void;
        /**
          * @default ''
         */
        "photoAlt"?: string;
        /**
          * @default 'assets/img/slide_novios13.jpg'
         */
        "photoSrc"?: string;
    }
    interface PhotoCarousel {
    }
    interface SectionCouple {
        /**
          * @default 'Stephanie Santana Zambrano'
         */
        "bride"?: string;
        /**
          * @default ['Norma Angeliza Zambrano Mendoza', 'José Santana Arenas']
         */
        "brideParents"?: string[];
        /**
          * @default 'Brandon Jesús Garcia Garcia'
         */
        "groom"?: string;
        /**
          * @default ['Viviana Garcia Rito', 'Mauricio Garcia Aguilar']
         */
        "groomParents"?: string[];
        /**
          * @default 'Mejores son dos que uno, pues juntos superan cualquier desafío, se levantan cuando caen y se fortalecen con su amor.'
         */
        "verse"?: string;
        /**
          * @default 'Eclesiastés 4:9-10'
         */
        "verseRef"?: string;
    }
    interface SectionDetails {
        /**
          * @default 'Detalle'
         */
        "photoAlt"?: string;
        /**
          * Foto inferior
          * @default 'assets/img/slide_novios1.jpg'
         */
        "photoSrc"?: string;
    }
    interface SectionGifts {
        /**
          * @default 'Mesa de regalos'
         */
        "mesaLabel"?: string;
        /**
          * @default 'https://www.amazon.com.mx/wedding/share/NuestraBodaStephanieBrandon'
         */
        "mesaUrl"?: string;
        /**
          * @default 'El mejor regalo es que estés presente en este día tan esperado, pero si deseas hacernos un obsequio tenemos esta opción:'
         */
        "message"?: string;
        "note"?: string;
        /**
          * @default 'Regalos'
         */
        "title"?: string;
    }
    interface SectionLocation {
        /**
          * @default 'And. Vista Hermosa Manzana 019,'
         */
        "churchAddress1"?: string;
        /**
          * @default 'NFONAVIT San Francisco, 52176 San Salvador Tizatlalli, Méx.'
         */
        "churchAddress2"?: string;
        /**
          * @default 19.265728081855073
         */
        "churchLat"?: number;
        /**
          * @default -99.5949773087833
         */
        "churchLng"?: number;
        /**
          * @default 'Parroquia de San Francisco De Asís'
         */
        "churchPlace"?: string;
        /**
          * @default '5:00 p.m.'
         */
        "churchTime"?: string;
        /**
          * Iglesia
          * @default 'Ceremonia Religiosa'
         */
        "churchTitle"?: string;
        /**
          * @default 'Av. Durazno 85'
         */
        "hallAddress1"?: string;
        /**
          * @default ' Izcalli V, 52172 San Salvador Tizatlalli, Méx.'
         */
        "hallAddress2"?: string;
        /**
          * @default 19.269931527268504
         */
        "hallLat"?: number;
        /**
          * @default -99.59031501349244
         */
        "hallLng"?: number;
        /**
          * @default 'Salón Rossano'
         */
        "hallPlace"?: string;
        /**
          * @default '7:00 p.m.'
         */
        "hallTime"?: string;
        /**
          * Recepción / Salón
          * @default 'Recepción'
         */
        "hallTitle"?: string;
    }
    interface SectionRsvp {
        "onCancelAttendance"?: (event: SectionRsvpCustomEvent<void>) => void;
        /**
          * Eventos que puedes escuchar desde app-root
         */
        "onConfirmAttendance"?: (event: SectionRsvpCustomEvent<void>) => void;
        "onPendingAttendance"?: (event: SectionRsvpCustomEvent<void>) => void;
    }
    interface SectionTimeline {
    }
    interface SectionWelcome {
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "background-music": BackgroundMusic;
        "countdown-timer": CountdownTimer;
        "envelope-intro": EnvelopeIntro;
        "floral-intro": FloralIntro;
        "guest-messages": GuestMessages;
        "photo-carousel": PhotoCarousel;
        "section-couple": SectionCouple;
        "section-details": SectionDetails;
        "section-gifts": SectionGifts;
        "section-location": SectionLocation;
        "section-rsvp": SectionRsvp;
        "section-timeline": SectionTimeline;
        "section-welcome": SectionWelcome;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "background-music": LocalJSX.BackgroundMusic & JSXBase.HTMLAttributes<HTMLBackgroundMusicElement>;
            "countdown-timer": LocalJSX.CountdownTimer & JSXBase.HTMLAttributes<HTMLCountdownTimerElement>;
            "envelope-intro": LocalJSX.EnvelopeIntro & JSXBase.HTMLAttributes<HTMLEnvelopeIntroElement>;
            "floral-intro": LocalJSX.FloralIntro & JSXBase.HTMLAttributes<HTMLFloralIntroElement>;
            "guest-messages": LocalJSX.GuestMessages & JSXBase.HTMLAttributes<HTMLGuestMessagesElement>;
            "photo-carousel": LocalJSX.PhotoCarousel & JSXBase.HTMLAttributes<HTMLPhotoCarouselElement>;
            "section-couple": LocalJSX.SectionCouple & JSXBase.HTMLAttributes<HTMLSectionCoupleElement>;
            "section-details": LocalJSX.SectionDetails & JSXBase.HTMLAttributes<HTMLSectionDetailsElement>;
            "section-gifts": LocalJSX.SectionGifts & JSXBase.HTMLAttributes<HTMLSectionGiftsElement>;
            "section-location": LocalJSX.SectionLocation & JSXBase.HTMLAttributes<HTMLSectionLocationElement>;
            "section-rsvp": LocalJSX.SectionRsvp & JSXBase.HTMLAttributes<HTMLSectionRsvpElement>;
            "section-timeline": LocalJSX.SectionTimeline & JSXBase.HTMLAttributes<HTMLSectionTimelineElement>;
            "section-welcome": LocalJSX.SectionWelcome & JSXBase.HTMLAttributes<HTMLSectionWelcomeElement>;
        }
    }
}
